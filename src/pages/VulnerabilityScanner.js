import React from "react";
import { Table, Badge, Container, Row, Col, Card, Button } from "react-bootstrap";
import { Link } from "react-router-dom";

const vulnerabilityData = [
    { id: 1, device: "Laptop-01", ip: "192.168.1.10", risk: "High", lastScanned: "2025-03-15", totalVulns: 12, high: 5, medium: 4, low: 3, status: "At Risk" },
    { id: 2, device: "Server-02", ip: "192.168.1.20", risk: "Medium", lastScanned: "2025-03-14", totalVulns: 8, high: 2, medium: 5, low: 1, status: "Monitor" },
    { id: 3, device: "Router-01", ip: "192.168.1.1", risk: "Low", lastScanned: "2025-03-16", totalVulns: 4, high: 0, medium: 2, low: 2, status: "Secure" },
    { id: 4, device: "Firewall-01", ip: "192.168.1.2", risk: "High", lastScanned: "2025-03-15", totalVulns: 15, high: 7, medium: 5, low: 3, status: "At Risk" },
    { id: 5, device: "Workstation-03", ip: "192.168.1.30", risk: "Medium", lastScanned: "2025-03-14", totalVulns: 10, high: 3, medium: 5, low: 2, status: "Monitor" },
    { id: 6, device: "Database-01", ip: "192.168.1.50", risk: "High", lastScanned: "2025-03-13", totalVulns: 20, high: 10, medium: 7, low: 3, status: "Critical" },
    { id: 7, device: "Switch-02", ip: "192.168.1.5", risk: "Low", lastScanned: "2025-03-16", totalVulns: 3, high: 0, medium: 1, low: 2, status: "Secure" },
    { id: 8, device: "Laptop-02", ip: "192.168.1.11", risk: "Medium", lastScanned: "2025-03-15", totalVulns: 6, high: 2, medium: 3, low: 1, status: "Monitor" },
    { id: 9, device: "Server-03", ip: "192.168.1.21", risk: "High", lastScanned: "2025-03-14", totalVulns: 18, high: 8, medium: 6, low: 4, status: "Critical" },
    { id: 10, device: "IoT-01", ip: "192.168.1.40", risk: "Low", lastScanned: "2025-03-16", totalVulns: 2, high: 0, medium: 1, low: 1, status: "Secure" },
    { id: 11, device: "Printer-02", ip: "192.168.1.7", risk: "Medium", lastScanned: "2025-03-14", totalVulns: 5, high: 1, medium: 3, low: 1, status: "Monitor" },
    { id: 12, device: "Backup Server", ip: "192.168.1.60", risk: "High", lastScanned: "2025-03-13", totalVulns: 22, high: 12, medium: 7, low: 3, status: "Critical" },
    { id: 13, device: "NAS-01", ip: "192.168.1.25", risk: "Medium", lastScanned: "2025-03-15", totalVulns: 7, high: 2, medium: 4, low: 1, status: "Monitor" },
    { id: 14, device: "Load Balancer", ip: "192.168.1.8", risk: "High", lastScanned: "2025-03-14", totalVulns: 16, high: 9, medium: 5, low: 2, status: "At Risk" },
    { id: 15, device: "Proxy Server", ip: "192.168.1.9", risk: "Low", lastScanned: "2025-03-16", totalVulns: 4, high: 1, medium: 1, low: 2, status: "Secure" },
  ];

const getBadge = (risk) => {
  switch (risk) {
    case "High":
      return <Badge bg="danger">High</Badge>;
    case "Medium":
      return <Badge bg="warning">Medium</Badge>;
    case "Low":
      return <Badge bg="success">Low</Badge>;
    default:
      return <Badge bg="secondary">Unknown</Badge>;
  }
};


const handleScan = (device) => {
    alert(`Scanning ${device.device}...`);
  };
const VulnerabilityScanner = () => {


  return (
      <div id="content" className="app-content">
                <ul className="breadcrumb">
                  <li className="breadcrumb-item"><Link to="/dashboard">Home</Link></li>
                  <li className="breadcrumb-item active"><Link to="/endpoint-security">End point</Link></li>
                  <li className="breadcrumb-item active">vulnerability scanner</li>
                </ul>
                
                <h className="page-header">
                Vulnerability scanner<small></small>
                </h> 
                <Container className="mt-4">
      <Row>
        <Col>
      
            {/* <Card.Title className="mb-3 text-center">Vulnerability Scanner</Card.Title> */}
            <div className="d-flex justify-content-end mb-2">
              <Button variant="primary">Fresh Scan</Button>
            </div>
            <Table striped bordered hover responsive>
              <thead>
                <tr>
                  <th>#</th>
                  <th>Device</th>
                  <th>IP Address</th>
                  <th>Risk Level</th>
                  <th>Last Scanned</th>
                  <th>Total Vulns</th>
                  <th>High</th>
                  <th>Medium</th>
                  <th>Low</th>
                  <th>Status</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                {vulnerabilityData.map((device, index) => (
                  <tr key={device.id}>
                    <td>{index + 1}</td>
                    <td>{device.device}</td>
                    <td>{device.ip}</td>
                    <td>{getBadge(device.risk)}</td>
                    <td>{device.lastScanned}</td>
                    <td><Badge bg="dark">{device.totalVulns}</Badge></td>
                    <td><Badge bg="danger">{device.high}</Badge></td>
                    <td><Badge bg="warning">{device.medium}</Badge></td>
                    <td><Badge bg="success">{device.low}</Badge></td>
                    <td>{device.status}</td>
                    <td>
                      <Button variant="outline-primary" size="sm" onClick={() => handleScan(device)}>
                        Scan Now
                      </Button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </Table>
         
        </Col>
      </Row>
    </Container>
    </div>
  );
};

export default VulnerabilityScanner;
